@page "/admin/clients"
@using new_assistant.Core.Interfaces
@using Microsoft.AspNetCore.Authorization
@using System.Linq
@inject IUserRoleService UserRoleService
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Управление клиентами - KeyCloak Assistant</PageTitle>

@{
    var isAuthenticated = HttpContextAccessor.HttpContext?.User?.Identity?.IsAuthenticated == true;

    if (!isAuthenticated)
    {
        // Если пользователь не авторизован, перенаправляем на авторизацию через Keycloak
        Navigation.NavigateTo("/api/auth/login", forceLoad: true);
        return;
    }

    if (!UserRoleService.IsAdmin())
    {
        // Если пользователь не администратор, перенаправляем на главную страницу
        Navigation.NavigateTo("/", forceLoad: true);
        return;
    }
}

<!-- Hero Section -->
<div class="mb-8 animate-stagger">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-4xl font-bold gradient-text mb-2">
                Управление клиентами
            </h1>
            <p class="text-gray-400 text-lg">Поиск и управление всеми Keycloak клиентами во всех реалмах.</p>
        </div>
        <div class="flex justify-end">
            <button class="create-client-btn">
                <div class="btn-content">
                    <div class="btn-icon">
                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                    </div>
                    <span class="btn-text">Создать клиента</span>
                    <div class="btn-shine"></div>
                </div>
            </button>
        </div>
    </div>
</div>

<!-- Search Section - Clean Minimalist Style -->
<div class="mb-8">
    <!-- Search Container -->
    <div class="relative overflow-hidden rounded-2xl p-[1px] bg-gradient-to-r from-purple-500/50 via-sky-500/40 to-fuchsia-500/50 shadow-[0_0_35px_-15px_rgba(168,85,247,0.8)]">
        <div class="absolute -top-24 -right-16 w-64 h-64 bg-purple-500/30 rounded-full blur-3xl opacity-70 pointer-events-none"></div>
        <div class="absolute -bottom-32 -left-12 w-72 h-72 bg-sky-500/20 rounded-full blur-3xl opacity-70 pointer-events-none"></div>
        <div class="relative bg-gray-900/80 backdrop-blur-xl rounded-[1.4rem] p-6 border border-white/5">
        <!-- Header -->
        <div class="flex items-center justify-between mb-4">
            <div class="flex items-center space-x-3">
                <div class="w-10 h-10 bg-gradient-to-br from-blue-500/40 to-purple-500/40 border border-white/10 rounded-xl flex items-center justify-center shadow-[0_8px_20px_-12px_rgba(56,189,248,1)]">
                    <svg class="w-5 h-5 text-sky-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                </div>
                <div>
                    <h3 class="text-lg font-semibold text-white tracking-wide">Поиск клиентов</h3>
                    <p class="text-sm text-slate-300/80">По всем реалмам Keycloak</p>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(searchQuery))
            {
                <button @onclick="ClearSearch"
                        class="px-3 py-1.5 text-sm bg-gradient-to-r from-rose-500/30 to-orange-500/30 hover:from-rose-500/40 hover:to-orange-500/40 text-rose-200 rounded-lg transition-all duration-200 flex items-center space-x-2 border border-white/10">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                    <span>Очистить</span>
                </button>
            }
        </div>

        <!-- Search Input -->
        <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-slate-300/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
            <input type="text"
                   @bind="searchQuery"
                   @onkeypress="@(async (e) => { if (e.Key == "Enter") await SearchClients(); })"
                   placeholder="Введите название клиента, реалм или тип..."
                   class="w-full pl-12 pr-36 py-3.5 bg-gradient-to-r from-slate-900/70 via-slate-900/40 to-slate-900/70 border border-transparent rounded-2xl text-white placeholder-slate-400 focus:outline-none focus:ring-4 focus:ring-purple-500/30 focus:border-purple-400/70 transition-all duration-300 shadow-[inset_0_0_0_1px_rgba(148,163,184,0.25),0_12px_25px_-20px_rgba(99,102,241,1)]">
            <div class="absolute inset-y-0 right-3 flex items-center space-x-2">
                @if (!string.IsNullOrWhiteSpace(searchQuery))
                {
                    <div class="hidden sm:flex items-center text-xs text-slate-200/80 bg-white/5 px-2.5 py-1 rounded-lg border border-white/10 shadow-[0_5px_15px_-12px_rgba(148,163,184,0.8)]">Enter ↵</div>
                }
                <button type="button"
                        class="px-4 py-2 rounded-xl bg-gradient-to-r from-blue-500 via-indigo-500 to-purple-500 hover:from-blue-400 hover:via-indigo-400 hover:to-purple-400 text-white text-sm font-semibold transition-all duration-200 shadow-[0_10px_25px_-15px_rgba(99,102,241,1)]"
                        @onclick="SearchClients">
                    Найти
                </button>
            </div>
        </div>

        <!-- Quick Search Tags -->
        <div class="mt-4">
            <p class="text-sm text-slate-300/70 mb-3 uppercase tracking-[0.18em]">Популярные запросы</p>
            <div class="flex flex-wrap gap-2.5">
                @foreach (var suggestion in quickSuggestions)
                {
                    <button @onclick="@(async () => { searchQuery = suggestion.Query; await SearchClients(); })"
                            class=@($"group px-3.5 py-1.5 text-xs rounded-xl transition-all duration-300 border border-white/10 bg-white/5 hover:bg-white/10 flex items-center space-x-1.5 text-slate-200/90 shadow-[0_10px_30px_-18px_rgba(79,70,229,0.7)] {suggestion.ClassName}")>
                        <span>@suggestion.Icon</span>
                        <span class="transition-transform duration-300 group-hover:translate-x-0.5">@suggestion.Label</span>
                    </button>
                }
            </div>
        </div>

        <!-- Active Search Indicator -->
        @if (!string.IsNullOrEmpty(searchQuery))
        {
            <div class="mt-5 p-3.5 bg-gradient-to-r from-blue-500/10 via-indigo-500/10 to-purple-500/10 border border-blue-500/20 rounded-xl shadow-[0_12px_30px_-20px_rgba(99,102,241,0.8)]">
                <div class="flex items-center space-x-3">
                    <div class="w-2.5 h-2.5 bg-gradient-to-r from-blue-400 via-cyan-300 to-purple-400 rounded-full animate-pulse shadow-[0_0_12px_rgba(59,130,246,0.9)]"></div>
                    <span class="text-sm text-blue-200">Поиск: <span class="font-medium text-slate-50">"@searchQuery"</span></span>
                </div>
            </div>
        }
        </div>
    </div>
</div>

<!-- Stats Section -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Всего клиентов -->
    <div class="card stat-card-blue p-6 flex items-center space-x-4 animate-stagger">
        <div class="w-12 h-12 bg-blue-500/20 rounded-full flex items-center justify-center text-blue-400 text-xl">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
        </div>
        <div>
            <p class="text-2xl font-bold text-white">@totalClients</p>
            <p class="text-sm text-blue-300">Всего клиентов</p>
        </div>
    </div>

    <!-- Активные -->
    <div class="card stat-card-green p-6 flex items-center space-x-4 animate-stagger">
        <div class="w-12 h-12 bg-green-500/20 rounded-full flex items-center justify-center text-green-400 text-xl">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
        </div>
        <div>
            <p class="text-2xl font-bold text-white">@activeClients</p>
            <p class="text-sm text-green-300">Активные</p>
        </div>
    </div>

    <!-- По реалмам -->
    <div class="card stat-card-purple p-6 flex items-center space-x-4 animate-stagger">
        <div class="w-12 h-12 bg-purple-500/20 rounded-full flex items-center justify-center text-purple-400 text-xl">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4"></path>
            </svg>
        </div>
        <div>
            <p class="text-2xl font-bold text-white">@realmsCount</p>
            <p class="text-sm text-purple-300">Реалмов</p>
        </div>
    </div>

    <!-- Результаты поиска -->
    <div class="card stat-card-orange p-6 flex items-center space-x-4 animate-stagger">
        <div class="w-12 h-12 bg-orange-500/20 rounded-full flex items-center justify-center text-orange-400 text-xl">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
        </div>
        <div>
            <p class="text-2xl font-bold text-white">@searchResults</p>
            <p class="text-sm text-orange-300">Найдено</p>
        </div>
    </div>
</div>

<!-- Search Results -->
@if (isSearching)
{
    <div class="card p-6">
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-6">
            <div>
                <h3 class="text-xl font-semibold text-white mb-1">Результаты поиска</h3>
                <p class="text-sm text-gray-400">Найдено <span class="text-white font-semibold">@searchResults</span> клиентов. Время ответа: <span class="text-green-300">@lastSearchDuration</span></p>
            </div>
            <div class="flex flex-wrap gap-2">
                <div class="px-3 py-1.5 rounded-lg bg-gray-800/50 border border-gray-700 text-sm text-gray-300 flex items-center space-x-2">
                    <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span>Активных: @activeMatches</span>
                </div>
                <div class="px-3 py-1.5 rounded-lg bg-gray-800/50 border border-gray-700 text-sm text-gray-300 flex items-center space-x-2">
                    <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h18M3 12h18M3 17h18"></path>
                    </svg>
                    <span>Реалмов: @matchedRealmCount</span>
                </div>
            </div>
        </div>

        <!-- Table -->
        <div class="overflow-hidden border border-gray-700/60 rounded-2xl">
            <table class="w-full">
                <thead>
                    <tr class="bg-gray-800/50 text-left text-gray-300 text-sm">
                        <th class="py-3 px-6 font-medium">Название</th>
                        <th class="py-3 px-6 font-medium">Реалм</th>
                        <th class="py-3 px-6 font-medium">Тип</th>
                        <th class="py-3 px-6 font-medium">Категория</th>
                        <th class="py-3 px-6 font-medium">Статус</th>
                        <th class="py-3 px-6 font-medium">Создан</th>
                        <th class="py-3 px-6 font-medium">Действия</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-800/70 bg-gray-900/20">
                    @if (filteredClients.Any())
                    {
                        @foreach (var client in filteredClients)
                        {
                            <tr class="group hover:bg-gray-800/40 transition-colors">
                                <td class="py-4 px-6">
                                    <div class="flex items-center space-x-3">
                                        <div class="w-9 h-9 rounded-xl flex items-center justify-center text-lg font-semibold" style="background: @client.BadgeBackground; color: @client.BadgeColor">
                                            @client.BadgeText
                                        </div>
                                        <div>
                                            <p class="text-white font-medium">@client.Name</p>
                                            <p class="text-xs text-gray-400">@client.Description</p>
                                        </div>
                                    </div>
                                </td>
                                <td class="py-4 px-6">
                                    <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-purple-500/10 text-purple-200 border border-purple-500/20">
                                        @client.Realm
                                    </span>
                                </td>
                                <td class="py-4 px-6">
                                    <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-blue-500/10 text-blue-200 border border-blue-500/20">
                                        @client.Type
                                    </span>
                                </td>
                                <td class="py-4 px-6 text-sm text-gray-300">@client.Category</td>
                                <td class="py-4 px-6">
                                    <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium @(client.IsActive ? "bg-green-500/10 text-green-200 border border-green-500/20" : "bg-red-500/10 text-red-200 border border-red-500/20")">
                                        @(client.IsActive ? "Активен" : "Отключен")
                                    </span>
                                </td>
                                <td class="py-4 px-6 text-sm text-gray-400">@client.CreatedAt.ToString("dd MMM yyyy")</td>
                                <td class="py-4 px-6">
                                    <div class="flex space-x-2">
                                        <button class="px-3 py-1 text-xs rounded-lg bg-blue-500/10 text-blue-200 border border-blue-500/30 hover:bg-blue-500/20 transition">
                                            Открыть
                                        </button>
                                        <button class="px-3 py-1 text-xs rounded-lg bg-gray-700/40 text-gray-200 border border-gray-600 hover:bg-gray-700/60 transition">
                                            Настройки
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else if (!string.IsNullOrEmpty(searchQuery))
                    {
                        <tr>
                            <td colspan="7" class="py-20 text-center">
                                <div class="max-w-md mx-auto">
                                    <!-- No Results Icon -->
                                    <div class="relative mb-6">
                                        <div class="w-20 h-20 mx-auto bg-gradient-to-br from-orange-500/10 to-red-500/10 rounded-2xl flex items-center justify-center backdrop-blur-sm border border-orange-500/20">
                                            <svg class="w-10 h-10 text-orange-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                            </svg>
                                        </div>
                                        <div class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center">
                                            <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M6 18L18 6M6 6l12 12"></path>
                                            </svg>
                                        </div>
                                    </div>

                                    <!-- Main Message -->
                                    <h3 class="text-2xl font-bold text-white mb-3">Ничего не найдено</h3>
                                    <p class="text-gray-400 mb-6">По запросу <span class="text-orange-400 font-semibold">"@searchQuery"</span> клиенты не найдены</p>

                                    <!-- Suggestions -->
                                    <div class="bg-gray-800/30 rounded-xl p-5 border border-gray-700/50 mb-6">
                                        <h4 class="text-white font-semibold mb-3 flex items-center">
                                            <svg class="w-4 h-4 mr-2 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                                            </svg>
                                            Попробуйте изменить запрос
                                        </h4>
                                        <div class="space-y-2 text-sm text-gray-300">
                                            <div class="flex items-center space-x-2">
                                                <div class="w-1.5 h-1.5 bg-blue-400 rounded-full"></div>
                                                <span>Используйте более короткие слова</span>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <div class="w-1.5 h-1.5 bg-green-400 rounded-full"></div>
                                                <span>Проверьте правильность написания</span>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <div class="w-1.5 h-1.5 bg-purple-400 rounded-full"></div>
                                                <span>Попробуйте синонимы или части слов</span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Action Buttons -->
                                    <div class="flex flex-col sm:flex-row gap-3 justify-center">
                                        <button @onclick="ClearSearch"
                                                class="px-6 py-3 bg-gray-700/50 hover:bg-gray-600/50 text-white font-medium rounded-xl transition-all duration-200 border border-gray-600 hover:border-gray-500">
                                            Очистить поиск
                                        </button>
                                        <button @onclick="@(async () => { searchQuery = quickSuggestions.First().Query; await SearchClients(); })"
                                                class="px-6 py-3 bg-blue-500/20 hover:bg-blue-500/30 text-blue-300 hover:text-blue-200 font-medium rounded-xl transition-all duration-200 border border-blue-500/30 hover:border-blue-500/50">
                                            Попробовать "@quickSuggestions.First().Label"
                                        </button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <!-- Empty State - Modern Design -->
    <div class="text-center py-16">
        <!-- Hero Icon -->
        <div class="relative mb-8">
            <div class="w-24 h-24 mx-auto bg-gradient-to-br from-blue-500/10 via-purple-500/10 to-cyan-500/10 rounded-3xl flex items-center justify-center backdrop-blur-sm border border-gray-700/50">
                <svg class="w-12 h-12 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
            <!-- Floating Elements -->
            <div class="absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full animate-pulse"></div>
            <div class="absolute -bottom-1 -left-1 w-3 h-3 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.5s;"></div>
        </div>

        <!-- Main Content -->
        <div class="max-w-2xl mx-auto">
            <h2 class="text-3xl font-bold text-white mb-4">Найдите любой клиент</h2>
            <p class="text-xl text-gray-400 mb-8">Поиск работает по всем реалмам Keycloak одновременно</p>

            <!-- Feature Cards -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
                <div class="bg-gray-800/30 rounded-xl p-4 border border-gray-700/50">
                    <div class="w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center mb-3 mx-auto">
                        <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                    </div>
                    <h3 class="text-white font-semibold mb-2">Быстрый поиск</h3>
                    <p class="text-sm text-gray-400">Находит клиентов по частичному совпадению названия</p>
                </div>

                <div class="bg-gray-800/30 rounded-xl p-4 border border-gray-700/50">
                    <div class="w-8 h-8 bg-green-500/20 rounded-lg flex items-center justify-center mb-3 mx-auto">
                        <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4"></path>
                        </svg>
                    </div>
                    <h3 class="text-white font-semibold mb-2">Все реалмы</h3>
                    <p class="text-sm text-gray-400">Ищет во всех реалмах кроме master</p>
                </div>

                <div class="bg-gray-800/30 rounded-xl p-4 border border-gray-700/50">
                    <div class="w-8 h-8 bg-purple-500/20 rounded-lg flex items-center justify-center mb-3 mx-auto">
                        <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <h3 class="text-white font-semibold mb-2">Детальная информация</h3>
                    <p class="text-sm text-gray-400">Показывает реалм, тип и статус клиента</p>
                </div>
            </div>

            <!-- Quick Start -->
            <div class="bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-2xl p-6 border border-blue-500/20">
                <h3 class="text-lg font-semibold text-white mb-4">🚀 Попробуйте прямо сейчас</h3>
                <div class="flex justify-center flex-wrap gap-3">
                    <button @onclick="@(async () => { searchQuery = "app"; await SearchClients(); })"
                            class="px-6 py-3 bg-blue-500/20 hover:bg-blue-500/30 text-blue-300 hover:text-blue-200 rounded-xl transition-all duration-200 border border-blue-500/30 hover:border-blue-500/50 font-medium">
                        Поиск "app"
                    </button>
                    <button @onclick="@(async () => { searchQuery = "test"; await SearchClients(); })"
                            class="px-6 py-3 bg-green-500/20 hover:bg-green-500/30 text-green-300 hover:text-green-200 rounded-xl transition-all duration-200 border border-green-500/30 hover:border-green-500/50 font-medium">
                        Поиск "test"
                    </button>
                    <button @onclick="@(async () => { searchQuery = "mobile"; await SearchClients(); })"
                            class="px-6 py-3 bg-purple-500/20 hover:bg-purple-500/30 text-purple-300 hover:text-purple-200 rounded-xl transition-all duration-200 border border-purple-500/30 hover:border-purple-500/50 font-medium">
                        Поиск "mobile"
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string searchQuery = string.Empty;
    private bool isSearching = false;
    private int totalClients = 0;
    private int activeClients = 0;
    private int realmsCount = 0;
    private int searchResults = 0;
    private int activeMatches = 0;
    private int matchedRealmCount = 0;
    private string lastSearchDuration = "~";

    private readonly List<ClientSearchSuggestion> quickSuggestions = new()
    {
        new("app", "Веб-приложения", "bg-blue-500/10 hover:bg-blue-500/20 text-blue-200 border-blue-500/20", "💻"),
        new("test", "Тестовые", "bg-green-500/10 hover:bg-green-500/20 text-green-200 border-green-500/20", "🧪"),
        new("mobile", "Мобильные", "bg-purple-500/10 hover:bg-purple-500/20 text-purple-200 border-purple-500/20", "📱"),
        new("api", "API сервисы", "bg-orange-500/10 hover:bg-orange-500/20 text-orange-200 border-orange-500/20", "🔗")
    };

    private readonly List<ClientSearchResult> allClients = new();
    private List<ClientSearchResult> filteredClients = new();

    protected override async Task OnInitializedAsync()
    {
        // Загружаем общую статистику
        await LoadStatistics();
    }

    private async Task SearchClients()
    {
        var query = searchQuery.Trim();

        if (string.IsNullOrWhiteSpace(query))
        {
            await ClearSearch();
            return;
        }

        var watch = System.Diagnostics.Stopwatch.StartNew();

        isSearching = true;

        await Task.Delay(150); // Имитация задержки API

        filteredClients = allClients
            .Where(client => client.Matches(query))
            .OrderByDescending(client => client.IsActive)
            .ThenBy(client => client.Name)
            .ToList();

        searchResults = filteredClients.Count;
        activeMatches = filteredClients.Count(client => client.IsActive);
        matchedRealmCount = filteredClients.Select(client => client.Realm).Distinct(StringComparer.OrdinalIgnoreCase).Count();

        watch.Stop();
        lastSearchDuration = watch.ElapsedMilliseconds < 1
            ? "<1 мс"
            : $"{watch.ElapsedMilliseconds} мс";

        StateHasChanged();
    }

    private Task ClearSearch()
    {
        searchQuery = string.Empty;
        isSearching = false;
        searchResults = 0;
        activeMatches = 0;
        matchedRealmCount = 0;
        lastSearchDuration = "~";
        filteredClients = new List<ClientSearchResult>();
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task LoadStatistics()
    {
        // Здесь будет загрузка статистики через Keycloak API
        // Пока что используем тестовые данные
        allClients.Clear();
        allClients.AddRange(new[]
        {
            new ClientSearchResult("my-app-client", "production", "Confidential", true, DateTime.UtcNow.AddDays(-5), "Веб-приложение команды Growth", "Веб-приложение", "linear-gradient(135deg, rgba(59,130,246,0.25), rgba(96,165,250,0.25))", "#60a5fa", "MA"),
            new ClientSearchResult("marketing-landing", "marketing", "Public", true, DateTime.UtcNow.AddDays(-19), "Публичный лендинг для маркетинга", "Маркетинг", "linear-gradient(135deg, rgba(96,165,250,0.25), rgba(167,139,250,0.25))", "#a855f7", "ML"),
            new ClientSearchResult("mobile-app", "mobile", "Confidential", true, DateTime.UtcNow.AddDays(-37), "Мобильное приложение iOS/Android", "Мобильное", "linear-gradient(135deg, rgba(129,140,248,0.25), rgba(14,165,233,0.25))", "#818cf8", "MO"),
            new ClientSearchResult("analytics-api", "analytics", "Bearer-only", false, DateTime.UtcNow.AddDays(-120), "Сервис аналитики", "API", "linear-gradient(135deg, rgba(251,191,36,0.25), rgba(245,158,11,0.25))", "#fbbf24", "AN"),
            new ClientSearchResult("payments-service", "finance", "Confidential", true, DateTime.UtcNow.AddDays(-60), "Платёжный сервис", "Финансы", "linear-gradient(135deg, rgba(34,197,94,0.25), rgba(22,163,74,0.25))", "#4ade80", "PS"),
            new ClientSearchResult("test-client", "sandbox", "Public", true, DateTime.UtcNow.AddDays(-2), "Тестовый клиент для QA", "Тестирование", "linear-gradient(135deg, rgba(248,113,113,0.25), rgba(244,114,182,0.25))", "#f472b6", "TC"),
            new ClientSearchResult("legacy-portal", "legacy", "Confidential", false, DateTime.UtcNow.AddDays(-320), "Старый портал", "Порталы", "linear-gradient(135deg, rgba(148,163,184,0.25), rgba(148,163,184,0.2))", "#cbd5f5", "LP"),
            new ClientSearchResult("support-chatbot", "support", "Public", true, DateTime.UtcNow.AddDays(-12), "Чат-бот поддержки", "Поддержка", "linear-gradient(135deg, rgba(129,199,212,0.25), rgba(56,189,248,0.25))", "#38bdf8", "SC")
        });

        filteredClients = new List<ClientSearchResult>();

        totalClients = allClients.Count;
        activeClients = allClients.Count(client => client.IsActive);
        realmsCount = allClients.Select(client => client.Realm).Distinct(StringComparer.OrdinalIgnoreCase).Count();
        return Task.CompletedTask;
    }

    private sealed record ClientSearchSuggestion(string Query, string Label, string ClassName, string Icon);

    private sealed record ClientSearchResult(
        string Name,
        string Realm,
        string Type,
        bool IsActive,
        DateTime CreatedAt,
        string Description,
        string Category,
        string BadgeBackground,
        string BadgeColor,
        string BadgeText)
    {
        public bool Matches(string query)
        {
            query = query.ToLowerInvariant();
            return Name.ToLowerInvariant().Contains(query)
                || Realm.ToLowerInvariant().Contains(query)
                || Type.ToLowerInvariant().Contains(query)
                || Description.ToLowerInvariant().Contains(query)
                || Category.ToLowerInvariant().Contains(query);
        }
    }
}
